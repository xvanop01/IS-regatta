/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.xvanop01.isregatta.api.user;

import com.xvanop01.isregatta.api.dto.CreateUserDto;
import com.xvanop01.isregatta.api.dto.UserDetailDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-04-24T20:17:42.714117581+02:00[Europe/Budapest]")

@Validated
@Api(value = "UserController", description = "the UserController API")
public interface UserControllerApi {

    /**
     * POST /users : Create new user
     *
     * @param createUserDto  (required)
     * @return User successfully created (status code 201)
     *         or Bad request (status code 400)
     *         or Internal server error (status code 500)
     */
    @ApiOperation(value = "Create new user", nickname = "createUser", notes = "", response = UserDetailDto.class, tags={ "user-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "User successfully created", response = UserDetailDto.class),
        @ApiResponse(code = 400, message = "Bad request"),
        @ApiResponse(code = 500, message = "Internal server error") })
    @RequestMapping(value = "/users",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<UserDetailDto> createUser(@ApiParam(value = "" ,required=true )  @Valid @RequestBody CreateUserDto createUserDto);

}
